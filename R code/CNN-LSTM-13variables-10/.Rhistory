R1 <- c(9.5,12.5,15,16,17.5,18.5,19.1,20,20.5,21.1,21.8,22,22.5,23,23.1,
23.5,23.8,23.9,24,24.1,24.3,24.5,24.8,25,25.1,25.2,25.3,25.5,
25.7,25.9,26,26.1,26.2,26.3,26.3,26.4,26.4,26.5,26.6,26.6,
26.8,26.9,27,27,27,27.1,27.1,27.1,27,26.9,26.9)
R2 <- c(9.5,15.5,21,24.5,27,29.1,30.9,33,34.1,35,36.5,37.1,38.6,38.9,
39.8,40.5,41.1,41.9,42.1,43,43.1,43.4,43.6,43.8,44,44.1,44.2,
44.7,45,45,45.1,45.3,45.5,45.9,46.1,46.1,46.3,46.3,46.8,46.9,
46.9,47,47.2,47.4,47.5,47.5,47.8,47.9,48,48,48.1,48.1,48.2,
48.4,48.6,48.8,48.9,48.9,48.9,48.9,49,49,48.9,48.9)
W1 <- 20*seq(1,length(R1))-R1
<- 20*seq(1,length(R1))-R1
W1
T1 <- 1.587*R1
data.frame(R1,W1,T1)
data.frame(R1,W1,round(T1,digits = 3))
T1 <- round(1.587*R1,digits = 3)
data.frame(R1,W1,T1)
D1 <- data.frame(R1,W1,T1)
View(D1)
W2 <- 20*seq(1,length(R2))-R2
T2 <- round(1.587*R2,digits = 3)
D2 <- data.frame(R2,W2,T2)
D2
166.5-44.53
170.51-44.53
121.94/60
125.98/60
121.97/1.22/60
2.72/1.67-1
8-6.646
0.1354/2
R3 <- c(34,40,42.5,46,47.5,48,50.2,51.8,52,53.5,54,55,55.2,55.8,56,56.2,
56.5,57,57.3,57.8,58,58.1,58.2,58.5,58.7,59,59.2,59.3,59.7,60,
60.1,60.7,60.8,61)
R4 <- c(3,9,21,32,40,44,46,48,52.5,56,59,61,63.1,65,66.8,68,69,70.1,
71.5,72.8,74,75,75.9,76.9,77.9,78.9,79.4,80.1,81,82,83,83.2,
84,84.1)
W3 <- 20*seq(1,length(R3))-R3
T3 <- round(1.587*R3,digits = 3)
D3 <- data.frame(R3,W3,T3)
W4 <- 20*seq(1,length(R4))-R4
T4 <- round(1.587*R4,digits = 3)
D4 <- data.frame(R4,W4,T4)
D3
D4
library(keras)
model <- layer_lstm(units = 48,return_sequences = T,
input_shape = c(144,38)) %>%
layer_lstm(units = 24) %>%
layer_dense(units = 1)
model
model <- layer_lstm(units = 48,return_sequences = T,
input_shape = list(NULL,38)) %>%
layer_lstm(units = 24) %>%
layer_dense(units = 1)
model <- layer_input(shape = c(144,38)) %>%
layer_lstm(units = 48,return_sequences = T) %>%
layer_lstm(units = 24) %>%
layer_dense(units = 1)
model
summary(model)
model %>% compile(optimizer="adam",
loss = "mae")
layer_input(shape = c(144,38)) %>%
layer_lstm(units = 48,return_sequences = T) %>%
layer_lstm(units = 24) %>%
layer_dense(units = 1)
model <- layer_input(shape = c(144,38)) %>%
layer_lstm(units = 48,return_sequences = T) %>%
layer_lstm(units = 24) %>%
layer_dense(units = 1)
help("keras_model_sequential")
model <- keras_model_sequential() %>%
layer_lstm(units = 48,return_sequences = T,input_shape = c(144,38)) %>%
layer_lstm(units = 24) %>%
layer_dense(units = 1)
model
train <- array(rnorm(1000*144*38),dim = c(1000,144,38))
target <- array(rnorm(1000),dim = c(1000))
model %>% fit(train,target,
epoch = 5,
batch_size = 16)
model %>% compile(optimizer="adam",
loss = "mae")
model %>% fit(train,target,
epoch = 5,
batch_size = 16)
model <- keras_model_sequential() %>%
layer_lstm(units = 32,return_sequences = T,input_shape = c(144,38)) %>%
layer_lstm(units = 16) %>%
layer_dense(units = 1)
model %>% compile(optimizer="adam",
loss = "mae")
model %>% fit(train,target,
epoch = 5,
batch_size = 16)
model
model %>% fit(train,target,
epoch = 5,
batch_size = 16)
train <- array(rnorm(2000*144*38),dim = c(2000,144,38))
target <- array(rnorm(2000),dim = c(2000))
model %>% fit(train,target,
epoch = 5,
batch_size = 16)
model <- keras_model_sequential() %>%
layer_lstm(units = 48,return_sequences = T,input_shape = c(144,38)) %>%
layer_lstm(units = 24) %>%
layer_dense(units = 1)
model %>% compile(optimizer="adam",
loss = "mae")
model %>% fit(train,target,
epoch = 5,
batch_size = 16)
model %>% fit(train,target,
epoch = 5,
batch_size = 32)
model %>% fit(train,target,
epoch = 5,
batch_size = 1)
train <- array(rnorm(100*144*38),dim = c(100,144,38))
target <- array(rnorm(100),dim = c(100))
model %>% fit(train,target,
epoch = 5,
batch_size = 1)
model
model <- keras_model_sequential() %>%
layer_lstm(units = 32,return_sequences = T,input_shape = c(144,38)) %>%
layer_lstm(units = 16) %>%
layer_dense(units = 1)
model %>% compile(optimizer="adam",
loss = "mae")
model %>% fit(train,target,
epoch = 5,
batch_size = 1)
model
library(keras)
help("layer_dense")
library(keras)
model <- load_model_hdf5("CSNN-LSTM_12_10.h5")
model
setwd("E:\\Rdatafile\\prediction of lake temp\\CSNN")
model <- load_model_hdf5("CSNN-LSTM_12_10.h5")
model
setwd("E:\\Rdatafile\\prediction of lake temp\\CCNN")
model <- load_model_hdf5("CCNN-LSTM_12_10.h5")
model
